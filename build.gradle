plugins {
    id 'java'
    id 'application'
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "de.undercouch.download" version "4.1.1"
}

configurations {
    ajc
    runtimeAgent
}

application{
    mainClassName = 'ru.clevertec.check.main.Main'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'com.itextpdf:itextpdf:5.5.13.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    compile group: 'javax.mail', name: 'mail', version: '1.4.1'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.9.6'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.6'
    ajc 'org.aspectj:aspectjtools:1.9.6'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
}

sourceSets {
    aspects{
        java{
            srcDir "src/aspects/aspectj"
            include '**/*.java'
            compileClasspath = sourceSets.main.compileClasspath
            runtimeClasspath = sourceSets.main.runtimeClasspath
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jar{
    manifest{
        attributes 'Main-Class':'ru.clevertec.check.main.Main',
                "Multi-Release": true
    }
}

def aspectj = { sourceFileSet, destDir->

    ant.taskdef(
            resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
            classpath: configurations.ajc.asPath)
    ant.iajc(maxmem: "1024m",
            fork: "true",
            Xlint: "warning",
            classpath: sourceFileSet.runtimeClasspath.asPath,
            destDir: destDir,
            source: project.sourceCompatibility,
            target: project.targetCompatibility) {
        sourceroots {
            sourceFileSet.java.srcDirs.each { dir ->
                if (file(dir).exists()) {
                    pathelement(path: dir)
                }
            }
        }
    }
}

compileJava {
    doLast {
        aspectj(project.sourceSets.aspects, "$buildDir/classes/java/main")
    }
}

task downloadFile(type: Download) {
    src 'https://github.com/stebadmitriy/files/raw/main/Clevertec_Template.pdf'
    dest 'C:\\Users\\Stealth\\IdeaProjects\\NewCheck\\src\\main\\resources\\templates'
}
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'java'
apply plugin: 'de.undercouch.download'
build.dependsOn downloadFile

