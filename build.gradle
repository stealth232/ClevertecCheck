
plugins {
    id 'java'
    id 'maven-publish'
    id 'application'
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "de.undercouch.download" version "4.1.1"
    id 'java-library'

}
configurations {
    ajc
    aspects
    ajInpath
    runtimeAgent
}
repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}
sourceSets {
    aspects{
        java{
            srcDir "ru/clevertec/check/annotations"
            include '**/*.aj'
            compileClasspath = sourceSets.main.compileClasspath
            runtimeClasspath = sourceSets.main.runtimeClasspath
        }
    }

    main {
        resources {
            exclude '**/*.aj'
        }
    }
}
def aspectj = { sourceFileSet, destDir->

    ant.taskdef(
            resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
            classpath: configurations.ajc.asPath)
//    ant.iajc(
//            maxmem: "1024m",
//            fork: 'true',
//            Xlint: "warning",
//            classpath: sourceFileSet.runtimeClasspath.asPath,
//            destDir: destDir,
//            source: project.sourceCompatibility,
//            target: project.targetCompatibility
//    ) {
//
//        sourceroots {
//            sourceFileSet.java.srcDirs.each {dir->
//                if(file(dir).exists()){
//                    pathelement(path: dir)
//                }
//
//            }
//        }
//    }
}
compileJava{
    doLast{
        aspectj (project.sourceSets.aspects,
                "$buildDir/classes/java/main")
    }
}
//bootRun.doFirst{
//    configurations.runtimeAgent.each{
//        File jarFile ->
//            jvmArgs "-javaagent:${jarFile.absolutePath}"
//    }
//}
project.ext{
    junitVersion = '5.7.0'
    aspectjVersion = '1.8.12'
}
dependencies {

    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'com.itextpdf:itextpdf:5.5.13.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    compile "org.aspectj:aspectjrt:1.9.5"
    ajc "org.aspectj:aspectjtools:1.9.5"
    compile "org.aspectj:aspectjweaver:1.9.5"

    runtimeAgent "org.springframework:spring-instrument"
    runtimeAgent "org.aspectj:aspectjweaver"
    compile "org.springframework.cloud:spring-cloud-dependencies:2020.0.0"
   // compile group: 'com.github.jjYBdx4IL.aop', name: 'aspectj-ltw-maven-plugin', version: '1.0'
    //compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.12'
//    compile "org.aspectj:aspectjrt:1.9.5"
//    ajc "org.aspectj:aspectjtools:1.9.5"
//    compile "org.aspectj: aspectweaver:1.9.5"
//  runtimeAgent "org.springframework:spring-instrument"
//    runtimeAgent "org.aspectj:aspectjweaver"

}
application{
    mainClassName = 'ru.clevertec.check.main.Main'
}
jar{
    manifest{
        attributes 'Main-Class':'ru.clevertec.check.main.Main',
        "Multi-Release": true
    }
}
sourceSets{
    aspects{
        java{
            srcDir "main/java/ru/clevertec/check/annotations"
            include '**/*.aj'

        }
    }
}
//def aspectj =
description = 'NewCheck'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
test {
    useJUnitPlatform()
}

task downloadFile(type: Download) {
    src 'https://github.com/stebadmitriy/files/raw/main/Clevertec_Template.pdf'
    dest 'C:\\Users\\Stealth\\IdeaProjects\\NewCheck\\src\\main\\resources\\templates'
}
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'java'
apply plugin: 'de.undercouch.download'
//apply plugin: 'aspectj'
build.dependsOn downloadFile

